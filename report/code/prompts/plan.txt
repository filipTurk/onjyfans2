Step 1: Data Understanding & Preparation

Analyze the provided CSV data structure to understand all fields (TitleVremeSLO, ContentVremeSLO, etc.)
Clean and preprocess the data, handling:

Special characters (Slovenian diacritics)
HTML tags in content fields
NULL values
URL links in content


Step 2: Design the LLM Solution

Choose an appropriate base model:

Consider models with Slovenian language support
Options: GPT-4, Claude, local models fine-tuned for Slovenian


Create a data transformation pipeline:

Parse CSV data
Extract relevant fields
Structure data by categories (weather, accidents, etc.)

Step 3: Prompt Engineering

Design effective prompts that:

Provide clear instructions about format requirements
Include examples of good outputs
Structure information hierarchically
Maintain consistent formatting


Create templates for different sections of the broadcast

Step 4: Fine-tuning (if needed)

Consider fine-tuning the model on specific Slovenian traffic broadcast data
Prepare training data from historical examples
Evaluate performance improvements after fine-tuning

Step 5: Output Formatting

Create a system to convert LLM-generated text to RTF format
Implement proper date and time formatting
Ensure consistent styling (fonts, sizes, etc.)

Step 6: Integration System

Build an automated pipeline:

Data ingestion from CSV
Preprocessing and structuring
LLM text generation
RTF formatting
Output storage/delivery



Step 7: Quality Control & Evaluation

Define evaluation metrics:

Accuracy of information
Natural language flow
Formatting consistency


Implement human review process for initial outputs
Create feedback loop for continuous improvement

Step 8: Deployment & Automation

Set up scheduled runs based on radio broadcast needs
Implement error handling and monitoring
Create alerts for potential issues
Document the entire system for operators